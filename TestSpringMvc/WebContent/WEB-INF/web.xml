<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<!-- 解决post乱码 -->
	<filter>  
	    <filter-name>CharacterEncodingFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
	    <init-param>  
	        <param-name>encoding</param-name>  
	        <param-value>utf-8</param-value>  
	    </init-param>  
	</filter>  
	<filter-mapping>  
	    <filter-name>CharacterEncodingFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<!-- 配置文件web.xml中添加支持将post转化为delete和put请求的声明 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置DispatchcerServlet -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<!-- 配置Spring mvc下的配置文件的位置和名称 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- <param-value>classpath:springmvc.xml</param-value> -->
			<!-- 多视图解析 -->
			<param-value>classpath:springmvcOfMany.xml</param-value>
		</init-param>
		
		<!-- 配置springmvc优先级 数值越小该servlet优先级越高 ,》=0时应用启动就加载，小余0或未指定代表该servlet在被选择时才加载初始化-->
		<load-on-startup>1</load-on-startup>
	</servlet>

	 <servlet-mapping>
         <servlet-name>springDispatcherServlet</servlet-name>
         <!-- 
	                          如果不加后缀，那么对于项目中的一些静态资源就无法访问，如：http://localhost:8888/TestSpringMvc/image/tim23123g.jpg  
	       	  因为在controller中找不到的对应的requestMapping ———— image/tim23123g.jpg。
	       	  还有所有的js 和   css也都无法方法  
	       	  解决方法 已知有3种：
	       	 1:    url-pattern 中路径不要用 /或者 /*，使用特定的后缀，如.action  .do ...
	       	 		<url-pattern>*.action</url-pattern>
	       	 			
	       	 2:    web.xml定义默认资源
	       	 		<servlet-mapping>
					    <servlet-name>default</servlet-name>
					     <url-pattern>*.jpg</url-pattern>
					</servlet-mapping>
			
			 3：           spring mvc 3.0.4以上可以在springmvc.xml使用新标签 mvc:resources 来获取静态资源
			 
			 4：           <mvc:default-servlet-handler/> 使用该标签，如果请求在spring mvc中找不到映射，就交给默认的servlet
		 		   <mvc:annotation-driven/>
		 		   这种方法比较简单(*^__^*) 
			 		
       	 -->
         <url-pattern>/</url-pattern>
     </servlet-mapping>
     
     <servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<!--
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.js</url-pattern>
	</servlet-mapping> 
	-->
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.css</url-pattern>
	</servlet-mapping>
</web-app>
